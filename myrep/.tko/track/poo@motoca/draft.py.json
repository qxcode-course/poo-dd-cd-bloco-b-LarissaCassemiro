{
    "patches": [
        {
            "label": "2025-10-14_19-27-04",
            "content": "@@ -36,17 +36,16 @@\n f, nome:\n- \n str):%0A  \n@@ -97,101 +97,8 @@\n f):%0A\n-        return self.__nome %0A%0A    def set_nome(self, value: str):%0A        self.__nome = value%0A\n     \n@@ -121,16 +121,39 @@\n __nome%0A%0A\n+    def set_nome(self)%0A\n %0Aclass M\n@@ -238,22 +238,16 @@\n inserir(\n-self, \n cliente:\n@@ -259,17 +259,8 @@\n oa):\n- -%3E bool:\n %0A   \n@@ -300,21 +300,31 @@\n  print(%22\n+a \n moto \n+j%C3%A1 esta \n ocupada%22\n",
            "lines": "37"
        },
        {
            "label": "2025-10-14_19-34-00",
            "content": "@@ -6,16 +6,17 @@\n  Pessoa:\n+ \n %0A    def\n@@ -66,15 +66,15 @@\n nome\n- = \n+(\n nome\n+)%0A\n %0A   \n@@ -120,16 +120,18 @@\n f.__nome\n+ %0A\n %0A    def\n@@ -187,39 +187,16 @@\n = value%0A\n-    def __str__(self):%0A\n         \n@@ -215,16 +215,17 @@\n __nome%0A%0A\n+%0A\n class Mo\n@@ -255,21 +255,8 @@\n lf):\n- # type union\n %0A   \n@@ -294,22 +294,19 @@\n e = None\n+ \n %0A%0A\n-    \n def inse\n@@ -331,16 +331,17 @@\n  Pessoa)\n+:\n  -%3E bool\n@@ -342,28 +342,24 @@\n %3E bool:%0A    \n-    \n if self.clie\n@@ -371,36 +371,32 @@\n = None:%0A        \n-    \n print(%22moto ocup\n@@ -397,28 +397,24 @@\n o ocupada%22)%0A\n-    \n         retu\n@@ -422,20 +422,16 @@\n n False%0A\n-    \n     self\n@@ -423,32 +423,33 @@\n  False%0A    self.\n+ \n cliente = client\n@@ -445,29 +445,26 @@\n te = cliente\n-%0A   \n  \n+%0A\n     return T\n@@ -467,25 +467,18 @@\n rn True%0A\n-    %0A    \n+%0A%0A\n def remo\n@@ -501,28 +501,24 @@\n soa %7C None:%0A\n-    \n     if self.\n@@ -529,24 +529,25 @@\n nte == None:\n+ \n %0A           \n@@ -539,36 +539,32 @@\n e: %0A        \n-    \n print(%22\n-m\n+M\n oto vazia%22)%0A\n@@ -567,28 +567,24 @@\n a%22)%0A        \n-    \n return None%0A\n@@ -579,28 +579,24 @@\n return None%0A\n-    \n     aux: Pes\n@@ -613,21 +613,18 @@\n .cliente\n-%0A   \n  \n+%0A\n     self\n@@ -638,25 +638,22 @@\n e = None\n-%0A  \n  \n+%0A\n     \n- \n return a\n@@ -659,21 +659,9 @@\n aux%0A\n-        %0A    \n+%0A\n def \n@@ -675,28 +675,24 @@\n (self):%0A    \n-    \n return f%22mot\n@@ -693,17 +693,16 @@\n  f%22moto:\n- \n %7Bself.cl\n@@ -709,20 +709,16 @@\n iente%7D%22%0A\n-    \n %0Amoto = \n@@ -741,22 +741,18 @@\n ssoa\n+ \n (%22\n-jose\n+Jos%C3%A9\n %22) \n-# 500\n %0Amot\n@@ -792,14 +792,8 @@\n er()\n- # 500\n %0Apri\n@@ -812,11 +812,5 @@\n ose)\n- # True\n+%0A\n",
            "lines": "40"
        },
        {
            "label": "2025-10-14_19-35-55",
            "content": "@@ -237,75 +237,8 @@\n nome\n-%0A    %0A    def __str__(self):%0A        return f%22nome: %7Bself.cliente%7D%22\n %0A%0Acl\n@@ -262,32 +262,45 @@\n  __init__(self):\n+ # type union\n %0A        self.cl\n@@ -930,245 +930,4 @@\n True\n-%0Adef main():%0A    moto = Moto()%0A    while True: %0A        line = input()%0A        args = line.split()%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break %0A%0A        elif args%5B0%5D == %22power%22:%0A            print(%22args%22)%0A%0Amain()\n",
            "lines": "37"
        },
        {
            "label": "2025-10-19_15-29-13",
            "content": "@@ -1,2879 +1,991 @@\n-# Este %C3%A9 um projeto de modelagem e implementa%C3%A7%C3%A3o de uma motoca motorizada em um parque. A ideia %C3%A9 simular o funcionamento dessa motoca atrav%C3%A9s de classes em um programa. Para isso, ser%C3%A3o implementadas duas classes principais: %60Pessoa%60 e %60Moto%60.%0A%0A# - Descri%C3%A7%C3%A3o%0A#   - A classe %60Moto%60 representa a motoca em si. Ela possui atributos como pot%C3%AAncia, tempo e a pessoa que est%C3%A1 atualmente utilizando-a.%0A#   - A motoca inicia com pot%C3%AAncia 1, sem minutos e sem ningu%C3%A9m.%0A#   - Apenas uma pessoa pode estar na motoca por vez.%0A#   - As funcionalidades principais da motoca incluem subir uma pessoa, descer uma pessoa, comprar tempo, dirigir por um tempo determinado e buzinar.%0A#   - A classe %60Pessoa%60 representa os usu%C3%A1rios da motoca. Ela possui os atributos nome e idade.%0A# - Comandos%0A#   - Todos os comandos seguem o modelo %60$comando arg1 arg2 ...%60. Em caso de erro, uma mensagem adequada deve ser impressa.%0A#   - %60$show%60 - Mostra o estado atual da motoca, incluindo pot%C3%AAncia, tempo e pessoa atualmente na motoca.%0A#     - %60f%22power:%7Bthis.power%7D, time:%7Bthis.time%7D, person:%7Bthis.person%7D%22%60%0A#     - power:1, time:0, person:(marcos:4)%0A#   - %60$init%60 - Reinicia a motoca para o estado inicial, com pot%C3%AAncia 1, sem minutos e sem ningu%C3%A9m.%0A#   - %60$enter%60 - Permite uma pessoa subir na motoca. Deve ser seguido pelos argumentos %60nome%60 e %60idade%60 da pessoa.%0A#   - %60$leave%60 - Faz a pessoa atualmente na motoca descer.%0A#   - %60$buy%60 - Permite comprar tempo em minutos para utilizar a motoca. O tempo recebido %C3%A9 incrementado ao tempo atual.%0A#   - %60$drive%60 - Permite dirigir a motoca por um tempo determinado.%0A#   - %60$honk%60 - Permite buzinar a motoca.%0A%0Aclass Pessoa:%0A    def __init__(self, nome: str, idade: int):%0A        self.nome = nome%0A        self.idade = idade%0A%0A    def __str__(self):%0A        return f%22(%7Bself.nome%7D:%7Bself.idade%7D)%22%0A%0A%0Aclass Moto:%0A    def __init__(self, potencia: int = 1):%0A        self.power = potencia%0A        self.time = 0%0A        self.person = None%0A%0A    def __str__(self):%0A        return f%22power:%7Bself.power%7D, time:%7Bself.time%7D, person:%7Bself.person%7D%22%0A%0A    def enter(self, pessoa: Pessoa):%0A        if self.person is not None:%0A            print(%22fail: moto ocupada%22)%0A            return%0A        self.person = pessoa%0A%0A    def leave(self):%0A        if self.person is None:%0A            print(%22fail: moto vazia%22)%0A            return%0A        print(self.person)%0A        self.person = None%0A%0A    def buy_time(self, value: int):%0A        self.time += value%0A%0A    def drive(self, time: int):%0A        if self.person is None:%0A            print(%22fail: moto vazia%22)%0A            return%0A        if self.time == 0:%0A            print(%22fail: tempo zerado%22)%0A            return%0A%0A        if time %3E self.time:%0A            print(f%22fail: andou %7Bself.time%7D min e acabou o tempo%22)%0A            self.time = 0%0A        else:%0A            self.time -= time%0A%0A    def honk(self):%0A        print(%22P%22 + %22e%22 * self.power + %22m%22)%0A%0A\n+class Pessoa:%0A    def __init__(self, nome: str):%0A        self.__nome = nome%0A    def get_nome(self):%0A        return self.__nome%0A    def set_nome(self, value: str):%0A        self.__nome = value%0A    def __str__(self):%0A        return self.__nome%0A    %0A    def __str__(self):%0A        return f%22nome: %7Bself.cliente%7D%22%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.cliente: Pessoa %7C None = None%0A%0A    def inserir(self, cliente: Pessoa) -%3E bool:%0A        if self.cliente != None:%0A            print(%22moto ocupada%22)%0A            return False%0A        self.cliente = cliente%0A        return True%0A    %0A    def remover(self) -%3E Pessoa %7C None:%0A        if self.cliente == None:%0A            print(%22moto vazia%22)%0A            return None%0A        aux: Pessoa = self.cliente%0A        self.cliente = None%0A        return aux%0A        %0A    def __str__(self):%0A        return f%22moto: %7Bself.cliente%7D%22%0A    %0Amoto = Moto()%0Ajose = Pessoa(%22jose%22) # 500%0Amoto.inserir(jose)%0Asaiu = moto.remover() # 500%0Aprint(saiu == jose) # True\n %0Adef\n@@ -1026,16 +1026,17 @@\n le True:\n+ \n %0A       \n@@ -1055,34 +1055,8 @@\n t()%0A\n-        print(f%22$%7Bline%7D%22)%0A\n     \n@@ -1078,16 +1078,42 @@\n .split()\n+%0A        print(f%22$%7Bline%7D%22)\n %0A%0A      \n@@ -1156,532 +1156,73 @@\n reak\n-%0A        elif args%5B0%5D == %22init%22:%0A            moto = Moto(int(args%5B1%5D))%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A        elif args%5B0%5D == %22enter%22:%0A            nome = args%5B1%5D%0A            idade = int(args%5B2%5D)%0A            moto.enter(Pessoa(nome, idade))%0A        elif args%5B0%5D == %22leave%22:%0A            moto.leave()%0A        elif args%5B0%5D == %22buy%22:%0A            moto.buy_time(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            moto.drive(int(args%5B1%5D))%0A        elif args%5B0%5D == %22honk%22:%0A            moto.honk()%0A%0A%0Amain()%0A\n+ %0A%0A        elif args%5B0%5D == %22power%22:%0A            print(%22args%22)%0A%0Amain()\n",
            "lines": "54"
        },
        {
            "label": "2025-10-19_16-21-23",
            "content": "@@ -1666,26 +1666,25 @@\n : str, idade\n- =\n+:\n  int):%0A     \n@@ -1687,26 +1687,24 @@\n        self.\n-__\n nome = nome%0A\n@@ -1716,18 +1716,16 @@\n    self.\n-__\n idade = \n@@ -1729,17 +1729,16 @@\n  = idade\n- \n %0A%0A    de\n@@ -1803,320 +1803,280 @@\n %7D)%22%0A\n-    %0A    def get_nome(self):%0A        return self.__nome%0A    def set_nome(self, value: str):%0A        self.__nome = value%0A    def __str__(self):%0A        return self.__nome%0A    %0A    def __str__(self):%0A        return f%22nome: %7Bself.cliente%7D%22%0A%0Aclass Moto:%0A\n+%0A%0Aclass Moto:%0A    def __init__(self, potencia: int = 1):%0A        self.power = potencia%0A        self.time = 0%0A        self.person = None%0A%0A    def __str__(self):%0A        return f%22power:%7Bself.power%7D, time:%7Bself.time%7D, person:%7Bself.person%7D%22%0A%0A \n    \n- \n def \n-__init__(self, cliente: int, potencia: int, tempo: int\n+enter(self, pessoa: Pessoa\n ):%0A \n@@ -2086,51 +2086,46 @@\n     \n+if \n self.\n-cliente: Pessoa %7C None =\n+person is not\n  None\n-%0A\n+:%0A  \n         \n self\n@@ -2124,208 +2124,106 @@\n     \n-self.potencia = 1%0A        self.tempo = 0%0A%0A    def __str__(self):%0A        return f%22potencia:%7Bself.potencia%7D, tempo:%7Bself.tempo%7D, cliente:%7Bself.cliente%7D%22%0A%0A%0A    def inserir(self, cliente: Pessoa) -%3E bool\n+  print(%22fail: moto ocupada%22)%0A            return%0A        self.person = pessoa%0A%0A    def leave(self)\n :%0A  \n@@ -2232,34 +2232,33 @@\n     if self.\n-cliente !=\n+person is\n  None:%0A     \n@@ -2271,27 +2271,31 @@\n  print(%22\n-moto ocupad\n+fail: moto vazi\n a%22)%0A    \n@@ -2312,14 +2312,8 @@\n turn\n- False\n %0A   \n@@ -2321,1009 +2321,558 @@\n     \n-self.cliente = cliente%0A        return True%0A    %0A    def comprarTempo(self, value: int):%0A        self.tempo += value%0A    %0A    def dirigir(self, tempo: int):%0A        if self.cliente != None:%0A            print(%22fail: moto vazia%22)%0A            return%0A        if self.tempo == 0:%0A            print(%22fail: tempo zerado%22)%0A            return%0A        if tempo %3E self.tempo:%0A            print(f%22fail: andou %7Bself.tempo%7D min e acabou o tempo%22)%0A            self.tempo = 0%0A        else:%0A            self.tempo -= tempo%0A        %0A    def buzinar(self):%0A            print(%22P%22 + %22e%22 * self.potencia + %22m%22)%0A%0A    def remover(self) -%3E Pessoa %7C None:%0A        if self.cliente == None:%0A            print(%22moto vazia%22)%0A            return None%0A        aux: Pessoa = self.cliente%0A        self.cliente = None%0A        return aux%0A        %0A    def __str__(self):%0A        return f%22moto: %7Bself.cliente%7D%22%0A    %0A# moto = Moto()%0A# jose = Pessoa(%22jose%22) # 500%0A# moto.inserir(jose)%0A# saiu = moto.remover() # 500%0A# print(saiu == jose) # True\n+print(self.person)%0A        self.person = None%0A%0A    def buy_time(self, value: int):%0A        self.time += value%0A%0A    def drive(self, time: int):%0A        if self.person is None:%0A            print(%22fail: moto vazia%22)%0A            return%0A        if self.time == 0:%0A            print(%22fail: tempo zerado%22)%0A            return%0A%0A        if time %3E self.time:%0A            print(f%22fail: andou %7Bself.time%7D min e acabou o tempo%22)%0A            self.time = 0%0A        else:%0A            self.time -= time%0A%0A    def honk(self):%0A        print(%22P%22 + %22e%22 * self.power + %22m%22)%0A\n %0A%0Ade\n@@ -2914,17 +2914,16 @@\n le True:\n- \n %0A       \n@@ -2934,24 +2934,50 @@\n e = input()%0A\n+        print(f%22$%7Bline%7D%22)%0A\n         args\n@@ -2995,34 +2995,8 @@\n it()\n-%0A        print(f%22$%7Bline%7D%22)\n %0A%0A  \n@@ -3039,17 +3039,16 @@\n    break\n- \n %0A       \n@@ -3280,14 +3280,12 @@\n oto.\n-inseri\n+ente\n r(Pe\n@@ -3289,17 +3289,16 @@\n (Pessoa(\n- \n nome, id\n@@ -3357,15 +3357,13 @@\n oto.\n-remover\n+leave\n ()%0A \n@@ -3413,180 +3413,162 @@\n oto.\n-comprarTempo(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            moto.dirigir(int(args%5B1%5D))%0A        elif args%5B0%5D == %22honk%22:%0A            moto.buzinar()%0A%0A         %0A%0Amain()\n+buy_time(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            moto.drive(int(args%5B1%5D))%0A        elif args%5B0%5D == %22honk%22:%0A            moto.honk()%0A%0A%0Amain()%0A\n",
            "lines": "100"
        },
        {
            "label": "2025-10-19_17-11-47",
            "content": "@@ -1670,17 +1670,18 @@\n r, idade\n-:\n+ =\n  int):%0A \n@@ -1734,16 +1734,17 @@\n  = idade\n+ \n %0A%0A    de\n@@ -1780,26 +1780,24 @@\n rn f%22(%7Bself.\n-__\n nome%7D:%7Bself.\n@@ -1792,26 +1792,24 @@\n nome%7D:%7Bself.\n-__\n idade%7D)%22%0A%0A  \n@@ -1805,16 +1805,20 @@\n dade%7D)%22%0A\n+    \n %0A    def\n@@ -1861,25 +1861,24 @@\n .__nome%0A\n-%0A\n     def \n get_idad\n@@ -1873,53 +1873,180 @@\n def \n-get_idade(self):%0A        return self.__idade%0A\n+set_nome(self, value: str):%0A        self.__nome = value%0A    def __str__(self):%0A        return self.__nome%0A    %0A    def __str__(self):%0A        return f%22nome: %7Bself.cliente%7D%22\n %0A%0Acl\n@@ -2077,16 +2077,30 @@\n __(self,\n+ cliente: int,\n  potenci\n@@ -2109,12 +2109,20 @@\n  int\n- = 1\n+, tempo: int\n ):%0A \n@@ -2137,24 +2137,37 @@\n elf.\n-power = potencia\n+cliente: Pessoa %7C None = None\n %0A   \n@@ -2172,32 +2172,36 @@\n        self.\n-time = 0\n+potencia = 1\n %0A        sel\n@@ -2206,36 +2206,17 @@\n elf.\n-person: Pessoa %7C None = None\n+tempo = 0\n %0A%0A  \n@@ -2255,19 +2255,22 @@\n urn f%22po\n-wer\n+tencia\n :%7Bself.p\n@@ -2274,55 +2274,63 @@\n f.po\n-wer%7D, time:%7Bself.time%7D, person:%7Bself.person\n+tencia%7D, tempo:%7Bself.tempo%7D, cliente:%7Bself.cliente\n %7D%22%0A%0A\n+%0A\n     \n@@ -2347,22 +2347,23 @@\n r(self, \n-pessoa\n+cliente\n : Pessoa\n@@ -2363,16 +2363,24 @@\n  Pessoa)\n+ -%3E bool\n :%0A      \n@@ -2393,21 +2393,18 @@\n elf.\n-person is not\n+cliente !=\n  Non\n@@ -2421,30 +2421,24 @@\n      print(%22\n-fail: \n moto ocupada\n@@ -2462,61 +2462,14 @@\n turn\n-%0A        self.person = pessoa%0A%0A    def remover(self):\n+ False\n %0A   \n@@ -2477,69 +2477,30 @@\n     \n-if \n self.\n-person is None:%0A            print(%22fail: moto vazia%22)\n+cliente = cliente\n %0A   \n@@ -2508,73 +2508,24 @@\n     \n-    \n return\n+ True\n %0A    \n-    print(self.person)%0A        self.person = None%0A\n %0A   \n@@ -2575,19 +2575,20 @@\n   self.t\n-ime\n+empo\n  += valu\n@@ -2589,16 +2589,20 @@\n = value%0A\n+    \n %0A    def\n@@ -2649,17 +2649,18 @@\n elf.\n-person is\n+cliente !=\n  Non\n@@ -2736,19 +2736,20 @@\n f self.t\n-ime\n+empo\n  == 0:%0A \n@@ -2831,19 +2831,20 @@\n %3E self.t\n-ime\n+empo\n :%0A      \n@@ -2876,19 +2876,20 @@\n  %7Bself.t\n-ime\n+empo\n %7D min e \n@@ -2923,19 +2923,20 @@\n   self.t\n-ime\n+empo\n  = 0%0A   \n@@ -2964,19 +2964,20 @@\n   self.t\n-ime\n+empo\n  -= temp\n@@ -2978,16 +2978,24 @@\n = tempo%0A\n+        \n %0A    def\n@@ -3014,24 +3014,28 @@\n f):%0A        \n+    \n print(%22P%22 + \n@@ -3047,19 +3047,22 @@\n  self.po\n-wer\n+tencia\n  + %22m%22)%0A\n@@ -3062,16 +3062,429 @@\n + %22m%22)%0A%0A\n+    def remover(self) -%3E Pessoa %7C None:%0A        if self.cliente == None:%0A            print(%22moto vazia%22)%0A            return None%0A        aux: Pessoa = self.cliente%0A        self.cliente = None%0A        return aux%0A        %0A    def __str__(self):%0A        return f%22moto: %7Bself.cliente%7D%22%0A    %0A# moto = Moto()%0A# jose = Pessoa(%22jose%22) # 500%0A# moto.inserir(jose)%0A# saiu = moto.remover() # 500%0A# print(saiu == jose) # True%0A\n %0Adef mai\n@@ -3521,16 +3521,17 @@\n le True:\n+ \n %0A       \n@@ -3550,34 +3550,8 @@\n t()%0A\n-        print(f%22$%7Bline%7D%22)%0A\n     \n@@ -3573,16 +3573,42 @@\n .split()\n+%0A        print(f%22$%7Bline%7D%22)\n %0A%0A      \n@@ -3647,16 +3647,17 @@\n    break\n+ \n %0A       \n@@ -3900,16 +3900,17 @@\n (Pessoa(\n+ \n nome, id\n@@ -4186,12 +4186,21 @@\n ()%0A%0A\n+         %0A\n %0Amain()\n-%0A\n",
            "lines": "120"
        },
        {
            "label": "2025-10-19_17-13-01",
            "content": "# Este \u00e9 um projeto de modelagem e implementa\u00e7\u00e3o de uma motoca motorizada em um parque. A ideia \u00e9 simular o funcionamento dessa motoca atrav\u00e9s de classes em um programa. Para isso, ser\u00e3o implementadas duas classes principais: `Pessoa` e `Moto`.\n\n# - Descri\u00e7\u00e3o\n#   - A classe `Moto` representa a motoca em si. Ela possui atributos como pot\u00eancia, tempo e a pessoa que est\u00e1 atualmente utilizando-a.\n#   - A motoca inicia com pot\u00eancia 1, sem minutos e sem ningu\u00e9m.\n#   - Apenas uma pessoa pode estar na motoca por vez.\n#   - As funcionalidades principais da motoca incluem subir uma pessoa, descer uma pessoa, comprar tempo, dirigir por um tempo determinado e buzinar.\n#   - A classe `Pessoa` representa os usu\u00e1rios da motoca. Ela possui os atributos nome e idade.\n# - Comandos\n#   - Todos os comandos seguem o modelo `$comando arg1 arg2 ...`. Em caso de erro, uma mensagem adequada deve ser impressa.\n#   - `$show` - Mostra o estado atual da motoca, incluindo pot\u00eancia, tempo e pessoa atualmente na motoca.\n#     - `f\"power:{this.power}, time:{this.time}, person:{this.person}\"`\n#     - power:1, time:0, person:(marcos:4)\n#   - `$init` - Reinicia a motoca para o estado inicial, com pot\u00eancia 1, sem minutos e sem ningu\u00e9m.\n#   - `$enter` - Permite uma pessoa subir na motoca. Deve ser seguido pelos argumentos `nome` e `idade` da pessoa.\n#   - `$leave` - Faz a pessoa atualmente na motoca descer.\n#   - `$buy` - Permite comprar tempo em minutos para utilizar a motoca. O tempo recebido \u00e9 incrementado ao tempo atual.\n#   - `$drive` - Permite dirigir a motoca por um tempo determinado.\n#   - `$honk` - Permite buzinar a motoca.\n\nclass Pessoa:\n    def __init__(self, nome: str, idade: int):\n        self.__nome = nome\n        self.__idade = idade\n\n    def __str__(self):\n        return f\"({self.__nome}:{self.__idade})\"\n\n    def get_nome(self):\n        return self.__nome\n\n    def get_idade(self):\n        return self.__idade\n\n\nclass Moto:\n    def __init__(self, potencia: int = 1):\n        self.power = potencia\n        self.time = 0\n        self.person: Pessoa | None = None\n\n    def __str__(self):\n        return f\"power:{self.power}, time:{self.time}, person:{self.person}\"\n\n    def inserir(self, pessoa: Pessoa):\n        if self.person is not None:\n            print(\"fail: moto ocupada\")\n            return\n        self.person = pessoa\n\n    def remover(self):\n        if self.person is None:\n            print(\"fail: moto vazia\")\n            return\n        print(self.person)\n        self.person = None\n\n    def comprarTempo(self, value: int):\n        self.time += value\n\n    def dirigir(self, tempo: int):\n        if self.person is None:\n            print(\"fail: moto vazia\")\n            return\n        if self.time == 0:\n            print(\"fail: tempo zerado\")\n            return\n        if tempo > self.time:\n            print(f\"fail: andou {self.time} min e acabou o tempo\")\n            self.time = 0\n        else:\n            self.time -= tempo\n\n    def buzinar(self):\n        print(\"P\" + \"e\" * self.power + \"m\")\n\n\ndef main():\n    moto = Moto()\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            moto = Moto(int(args[1]))\n        elif args[0] == \"show\":\n            print(moto)\n        elif args[0] == \"enter\":\n            nome = args[1]\n            idade = int(args[2])\n            moto.inserir(Pessoa(nome, idade))\n        elif args[0] == \"leave\":\n            moto.remover()\n        elif args[0] == \"buy\":\n            moto.comprarTempo(int(args[1]))\n        elif args[0] == \"drive\":\n            moto.dirigir(int(args[1]))\n        elif args[0] == \"honk\":\n            moto.buzinar()\n\n\nmain()\n",
            "lines": "105"
        }
    ]
}