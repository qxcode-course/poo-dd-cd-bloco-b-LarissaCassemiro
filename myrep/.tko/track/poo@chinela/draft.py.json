{
    "patches": [
        {
            "label": "2025-10-07_19-13-24",
            "content": "@@ -1468,19 +1468,32 @@\n t__(self\n+, tamanho:int\n ):%0A\n-\n         \n@@ -1510,16 +1510,50 @@\n anho = 0\n+%0A        self.set_tamanho(tamanho)\n %0A%0A    de\n@@ -1729,35 +1729,43 @@\n n False%0A        \n+ \n if \n+self.__\n tamanho %25 2 != 0\n@@ -2003,18 +2003,16 @@\n  Chinela\n-()\n %0A    whi\n@@ -2156,22 +2156,16 @@\n  break %0A\n-main()\n %0A       \n",
            "lines": "64"
        },
        {
            "label": "2025-10-07_19-43-57",
            "content": "#- Vamos implementar uma classe que controla os poss\u00edveis valores de cal\u00e7ados para uma chinela.\n#- As regras de valida\u00e7\u00e3o de valores s\u00e3o as seguintes.\n#- Uma chinela tem um valor tamanho que \u00e9 um n\u00famero par entre 20 e 50, incluindo 20 e 50.\n#- Fa\u00e7a o objeto chinela iniciar com tamanho 0 e controle atrav\u00e9s do m\u00e9todo setTamanho que apenas valores v\u00e1lidos de tamanho sejam atribu\u00eddos.\n#- Por fim, crie um loop no qual um objeto chinela \u00e9 criado e \u00e9 perguntado ao usu\u00e1rio qual seu tamanho de chinela.\n#- Mantenha o usu\u00e1rio preso no loop at\u00e9 que ele insira um valor v\u00e1lido.\n#- Caso ele digite um valor inv\u00e1lido, avise e d\u00ea uma mensagem de erro adequada.\n\n# c\u00f3digo do Tempo\n# usar o __ no come\u00e7o pra definir private\n# criar um get_algo para leitura e retornar o valor\n# criar um set_algo que recebe um valor\n# parametros default utilizados quando o valor n\u00e3o vem\n# parametros nomeados quando quero um valor especifico\n# class Tempo:\n#     def init(self, hora: int = 0, min: int = 0):\n#         self.h = 0\n#         self.set_hora(hora)\n#         self.m = min\n#         self.s = 0\n\n#     def set_hora(self, valor: int) -> None: # escrita\n#         if valor > 11 or valor < 0:\n#             print(\"hora errada\")\n#             return\n#         self.h = valor\n\n#     def get_hora(self) -> int: # leitura\n#         return self.h\n\n#     def str(self):\n#         return f\"{self.h}:{self.m}:{self.s}\"\n\n# agora = Tempo(min=55, hora=9)\n# print(agora)\n\n\nclass Chinela: \n    def __init__(self):\n        self.__tamanho = 0\n\n    def set_tamanho(self,tamanho:int)-> bool:\n        if tamanho < 20 or tamanho > 50:\n            print (\"Este tamanho \u00e9 inv\u00e1lido, deve est\u00e1 entre 20 e 50\")\n            return False\n        if tamanho % 2 != 0:\n            print(\"N\u00famero inv\u00e1lido, deve ser um n\u00famero par\")\n            return False\n        self.__tamanho = tamanho\n        return True\n\n    def get_tamanho(self)-> int:\n        return self.__tamanho\n\ndef main():\n    chinela = Chinela()\n    while True:\n        numero: int = int(input(\"Digite o tamanho da sua chinela\"))\n\n        if chinela.set_tamanho(numero) == True:\n            break \nmain()\n        \n",
            "lines": "63"
        }
    ]
}